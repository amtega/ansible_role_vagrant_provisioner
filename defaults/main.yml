---
# Role default lower priority variables

# Directory to store vagrant files

vagrant_provisioner_vms_directory: "~/.vagrant"

# Ansible group to put vagrant vms in

vagrant_provisioner_vms_group: vagrant_provisioner_vms

# List of dicts with the boxes to provisione. The dicts must have the following
# format:
#
# { name: "centos_7"               # Display name
#   address: "centos/7"            # Name in https://app.vagrantup.com
#   provider: "libvirt"            # Only tested with libvirt and docker
#   state: present                 # present or absent (to add remove the box)}

vagrant_provisioner_boxes: []

# Box options to apply if no other ones are specified in the specific
# image dictionary of the vagrant_provisioner_boxes variable.

vagrant_provisioner_box_provider: "libvirt"
vagrant_provisioner_box_state: "present"

# List of dicts with the virtual machines (vms) to provision. The dicts must
# have the following format:
#
# { name: "centos_7"         # Display name
#   box: "centos_7"          # What box is the vm derived from
#   state: present           # present or absent (to add remove the vm)
#   hostname: "centos-7"     # DNS name of the vm#
#   subdirectory: "centos_7" # Subdirectory inside
#                            # vagrant_provisioner_vms_directory
#                            # (if not provided default is name)
#   driver: kvm              # Virtual machine driver
#   memory: 1024             # Virtual machine memory
#   cpus: 1                  # Virtual machine number of CPUs
#
#   # The vm also supports the following optional ansible behavioral inventory
#   # parameters. The defaults values are indicated below.
#   #
#   # Look at http://docs.ansible.com/ansible/latest/intro_inventory.html for
#   # details.
#
#   ansible_connection: ssh
#   ansible_port: 22
#   ansible_user: vagrant
#   ansible_ssh_pass:
#   ansible_ssh_private_key_file:  # Default is to get the private key generated
#                                  # by vagrant
#   ansible_ssh_common_args:
#   ansible_scp_extra_args:
#   ansible_ssh_extra_args:
#   ansible_ssh_pipelining: false
#   ansible_ssh_executable: ssh
#   ansible_become: false
#   ansible_become_method: sudo
#   ansible_become_user: root
#   ansible_become_pass:
#   ansible_become_exe: sudo
#   ansible_become_flags: "-H -S -n"
#   ansible_python_interpreter: /usr/bin/python
#   ansible_shell_executable: /bin/sh }

vagrant_provisioner_vms: []

# General vm options to apply if no other ones are specified in the specific
# container dictionary of the vagrant_provisioner_vms variable.

vagrant_provisioner_vm_state: present
vagrant_provisioner_vm_driver: kvm
vagrant_provisioner_vm_memory: 1024
vagrant_provisioner_vm_cpus: 1
vagrant_provisioner_vm_ansible_connection: ssh
vagrant_provisioner_vm_ansible_port: 22
vagrant_provisioner_vm_ansible_user: vagrant
vagrant_provisioner_vm_ansible_ssh_pass:
vagrant_provisioner_vm_ansible_ssh_common_args:
vagrant_provisioner_vm_ansible_scp_extra_args:
vagrant_provisioner_vm_ansible_ssh_extra_args:
vagrant_provisioner_vm_ansible_ssh_pipelining: false
vagrant_provisioner_vm_ansible_ssh_executable: ssh
vagrant_provisioner_vm_ansible_become: false
vagrant_provisioner_vm_ansible_become_method: sudo
vagrant_provisioner_vm_ansible_become_user: root
vagrant_provisioner_vm_ansible_become_pass:
vagrant_provisioner_vm_ansible_become_exe: sudo
vagrant_provisioner_vm_ansible_become_flags: "-H -S -n"
vagrant_provisioner_vm_ansible_python_interpreter: /usr/bin/python
vagrant_provisioner_vm_ansible_shell_executable: /bin/sh
