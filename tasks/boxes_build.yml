---
# Setup vagrant boxes

- block:
    - name: create vagrant vms to build boxes
      include_tasks: vms.yml
      when: vagrant_provisioner_boxes_vms | length > 0
      vars:
        vagrant_provisioner_vm_state: "started"
        vagrant_provisioner_vms: "{{ vagrant_provisioner_boxes_vms }}"

    - name: refresh inventory to remove temporary vms used to build images
      meta: refresh_inventory

    - block:
        - name: package vms into vagrant boxes
          shell: >-
            vagrant package --machine-readable
            --output {{ vm.1.name }}.box | tee -a vagrant.log
          args:
            chdir: "{{ vm_path }}"
          register: vagrant_provisioner_package_boxes_result
          changed_when: >-
            vagrant_provisioner_package_boxes_result.stdout
            is search("action,package,end")
          failed_when: >-
            vagrant_provisioner_package_boxes_result.rc != 0
            or (not vagrant_provisioner_package_boxes_result.stdout
                    is search("action,package,end")
                and not vagrant_provisioner_package_boxes_result.stdout
                        is search("package as already exists") )
          loop: "{{ query('indexed_items', vagrant_provisioner_boxes_vms) }}"
          loop_control:
            loop_var: vm
            label: "{{ vm.1.name }}"

        - name: add built boxes to vagrant
          shell: >-
            vagrant box --machine-readable add --force
            --name {{ vm.1.name }}
            {{ vm.1.name }}.box | tee -a vagrant.log
          args:
            chdir: "{{ vm_path }}"
          register: vagrant_provisioner_add_built_boxes_result
          changed_when: >-
            vagrant_provisioner_add_built_boxes_result.stdout
            is search("box,ui,success")
          failed_when: >-
            not vagrant_provisioner_add_built_boxes_result.stdout
                is search("box,ui,success")
          when: >-
              vagrant_provisioner_package_boxes_result.results[vm.0]
              is changed
          loop: "{{ query('indexed_items', vagrant_provisioner_boxes_vms) }}"
          loop_control:
            loop_var: vm
            label: "{{ vm.1.name }}"
          vars:
            boxes: "{{ vagrant_provisioner_boxes_to_build }}"
      vars:
        vm_path: >-
          {{ vm.1.directory
             | default(vagrant_provisioner_vms_path | expanduser
                       + "/"
                       + vm.1.name) }}
  tags:
    - role::vagrant_provisioner
    - role::vagrant_provisioner::boxes::build
