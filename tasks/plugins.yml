---
# Setup vagrant plugins

- name: setup vagrant plugins
  shell: >-
    vagrant plugin
    {{ (plugin.state == "present") | ternary("install", "uninstall") }}
    {{ plugin.name }}
  register: vagrant_provisioner_plugin_setup_result
  failed_when: >-
    - >-
      plugin.state == "present"
      and not vagrant_provisioner_plugin_setup_result.stdout
              | search("Installed the plugin .*" + plugin.name)
    - >-
      plugin.state == "absent"
      and not vagrant_provisioner_plugin_setup_result.stdout
              | search("Successfully uninstalled .*" + plugin.name)
  when: >-
    (plugin.state == "present"
     and lookup("pipe",
               "vagrant plugin list | grep " + plugin.name + " || true")
        | length == 0)
    or (plugin.state == "absent"
        and lookup("pipe",
                   "vagrant plugin list | grep " + plugin.name + " || true")
            | length > 0)
  with_items: "{{ vagrant_provisioner_plugins }}"
  loop_control:
    label: "{{ plugin.name }}"
    loop_var: plugin
  tags:
    - role::vagrant_provisioner
    - role::vagrant_provisioner::plugins
