---
# Setup vagrant vms sequentiallly

- block:
    - name: sequential vagrant virtual machines deploy
      shell: >-
        vagrant --machine-readable
        {{ (vm_state == "started")
           | ternary("up", "destroy --force") }} | tee -a vagrant.log
      args:
        chdir: "{{ vm_path }}"
        removes: "{{ (vm_state == 'absent') | ternary('Vagrantfile', '') }}"
      register: vagrant_provisioner_vms_setup_result
      changed_when:
        - vagrant_provisioner_vms_setup_result.rc | default(-1) == 0
        - >-
          ( vm.1.state
            | default(vagrant_provisioner_vm_state) == "started"
            and ',action,up,start'
                in vagrant_provisioner_vms_setup_result.stdout | default([])
            and ',action,up,end'
                in vagrant_provisioner_vms_setup_result.stdout | default([]))
          or (vm.1.state
              | default(vagrant_provisioner_vm_state) == "absent"
              and vagrant_provisioner_vms_setup_result.stdout | default([])
                  is search("action,destroy,start")
              and vagrant_provisioner_vms_setup_result.stdout | default([])
                  is search("action,destroy,end")
              and not vagrant_provisioner_vms_setup_result.stdout | default([])
                  is search("Domain is not created"))
      failed_when:
          (vm.1.state
           | default(vagrant_provisioner_vm_state) == "started"
           and (',ui,error,'
                in vagrant_provisioner_vms_setup_result.stdout | default([])
                or vagrant_provisioner_vms_setup_result.rc | default(0) != 0
                or ',action,up,end'
                   not in vagrant_provisioner_vms_setup_result.stdout
                          | default([])))
          or 'error-exit'
             in vagrant_provisioner_vms_setup_result.stdout | default([])
      when: >-
        (vm_state == "started"
         and vagrant_facts.state | default('') != "started")
        or (vm_state == "absent" and vagrant_facts.vagrant_path is defined)
      loop: "{{ query('indexed_items', vagrant_provisioner_vms) }}"
      loop_control:
        loop_var: vm
        label: "{{ vm.1.hostname}} {{ vm_state }}"
      vars:
        vm_state: "{{ vm.1.state | default(vagrant_provisioner_vm_state) }}"
        vm_path: >-
          {{ vm.1.directory
             | default(vagrant_provisioner_vms_path | expanduser
             + "/"
             + vm.1.name) }}
        vagrant_facts_filtered: >-
          {{ vagrant_provisioner_vms_facts
             | selectattr("name", "equalto", vm.1.name)
             | list }}
        vagrant_facts: >-
          {{ (vagrant_facts_filtered | length > 0)
             | ternary(vagrant_facts_filtered | first, {}) }}
  tags:
    - role::vagrant_provisioner
    - role::vagrant_provisioner::vms
